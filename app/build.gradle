apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    Properties properties = new Properties()
    properties.load(project.file('../local.properties').newDataInputStream())

    signingConfigs {
        release {
            keyAlias properties.getProperty('keystore.keyAlias')
            storeFile file(properties.getProperty('keystore.storeFile'))
            storePassword properties.getProperty('keystore.storePassword')
            keyPassword properties.getProperty('keystore.keyPassword')
        }
    }

    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "soy.gabimoreno.audioclean"
        minSdkVersion 28
        targetSdkVersion 31
        versionCode 19
        versionName "0.7.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle {
        density { enableSplit true }
        abi { enableSplit true }
        language { enableSplit false }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            splits.abi.enable = false
            splits.density.enable = false
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        useIR = true
    }

    buildFeatures {
        viewBinding = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.32'
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

def arrow_version = "0.11.0"
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.browser:browser:1.3.0"

    implementation 'io.insert-koin:koin-androidx-scope:2.2.2'
    implementation 'io.insert-koin:koin-androidx-viewmodel:2.2.2'

    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    implementation "com.google.code.gson:gson:2.8.6"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0-alpha01'

    implementation platform("com.google.firebase:firebase-bom:25.12.0")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics"
    implementation "com.google.firebase:firebase-config-ktx"

    implementation "com.amplitude:android-sdk:2.25.2"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.10.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
}
